基本格式：

 每一个C程序都有一个入口函数：
 int main()
 {
	//操作语句
	return 0;
 }
 或者
int mian(void)
 {
	//操作语句
	return 0;
 }
 
 数据类型：
 标志符命名规则：
 
 基本数据类型：
 整型（int（2字节），short int（2字节），long int（4字节）），（有符号无符号）
 浮点型（float，double，long double），
 字符型（char）
 
 格式化输出：
 占位符，%d(带符号十进制整数)，%c(单个字符)，%s(字符串)，%f(6位小数)
 
常量定义:
#define 

自动类型转换：
char->int->double
字节小的可以向字节大的自动转换，但字节大的不能向字节小的自动转换

强制类型转换：
转换后不会改变原数据的类型及变量值，只在本次运算中临时性转换。
强制转换不遵循四舍五入。

算数运算符：
如果相除的两个数都是整数的话，则结果也为整数，小数部分省略，如8/3 = 2；而两数中有一个为小数，结果则为小数，如：9.0/2 = 4.500000。
取余只能用于两个整数之间。
除数不能为零。

关系运算符：
大于小于等于不等于。
赋值运算符：
简单赋值，复合赋值。
逻辑运算符：
非0即真。
与或非。
三目运算符：
？：

运算符优先级。

循环的应用：
求50以内的素数：在2到50之间遍历，在2到n之间，任取一个数，可以被n整除，则跳出这个循环。若这个数，就是n，则打印n。n就是素数，只能被自己整除。

打印99乘法表。
打印金字塔。

switch循环：
case后面只能是整型或字符型。
case语句没有break，会一直向下执行其他case的代码，直到遇到break。

goto：
一个应用：使用goto可以结束for循环。

自创函数的定义及声明。

函数返回值：
函数值的类型和函数定义中函数的类型应保持一致。如果两者不一致，则以函数返回类型为准，自动进行类型转换。

递归：
有结束条件。自身调用。

变量存储类别：
静态存储：static（静态变量），
动态存储：auto（自动存储，可省略），register（寄存器变量，只有局部自动变量和形式参数可以作为寄存器变量），extern（外部变量，某函数可以调用在该函数之后定义的变量）。

内部函数：static修饰，
外部函数：extern修饰（默认，可省略）。

数组：
定长。定义时要指定长度，或者直接指定所有元素的值。
下标从0开始。
注意直接是{}。
//第一种形式
    int arrFirst[3] ={1,2,3};
    //第二种形式
    int arrSecond[] = {1,2,3};
    //第三种形式
    int arrThird[3];
    //给arrThird数组每个元素初始化
    arrThird[0]=1;
    arrThird[1]=2;
    arrThird[2]=3;
	
字符串与数组：
使用字符数组定义字符串。
两种初始化方式：
char str[]="hello 你好";//可以有中文
char str[]={'h','e','l','l','o'};//不能包含中文

字符串函数：
strlen(s)，字符串长度，不包括"\n"，汉字3个，字母1个；
strcmp(s1,s2)，比较两个字符串的ascii码的大小;
strcpy(s1,s2)，拷贝s2到s1，会覆盖s1之前的字符串，，不能对常量进行拷贝;
strcat(s1,s2)，把s2拼接到s1后面，两个字符串指的内存空间不能重叠，s1要有足够的空间来容纳要复制的字符串；
atio(s1)，字符串转为整数。

多维数组：
定义及初始化：必须指定列的数量。
int x[][3]={{0},{1},{1,2,3}};
int x[4][3]={{1,2,3},{1,2,3},{1,2,3},{1,2,3}};
int x[][3]={1,2,3,4};

数组中查找：
遍历，注意数组越界。












